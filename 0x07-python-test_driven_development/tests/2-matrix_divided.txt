Import function 'matrix_divided' for testing
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test 0 'int as matrix'
    >>> matrix_divided([[10, 6], [4, 2]], 2)
    [[5.0, 3.0], [2.0, 1.0]]

Test 1 'float as matrix'
    >>> matrix_divided([[10.0, 6.0], [4.0, 2.0]], 2)
    [[5.0, 3.0], [2.0, 1.0]]

Test 2 'float and int as matrix'
    >>> matrix_divided([[10.0, 6], [4, 2.0]], 2)
    [[5.0, 3.0], [2.0, 1.0]]

Test 3 'missing matrix'
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 4 'missing div'
    >>> matrix_divided([[10.0, 6], [4, 2.0]], None)
    Traceback (most recent call last):
    TypeError: div must be a number

Test 5 'different size rows'
    >>> matrix_divided([[10.0, 6], [4]], None)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test 6 'str as div'
    >>> matrix_divided([[10.0, 6], 'hi'], None)
    Traceback (most recent call last):
    TypeError: div must be a number

Test 7 'div is 0'
    >>> matrix_divided([[10.0, 6], 0], None)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
